---
name: Test AutoPkg Release Brew

on:
  push:
    paths:
      - ".github/workflows/AutoPkgReleaseBrew.yaml"
      - "AutoPkgRecipe/autopkg.rb.mustache"
      - "AutoPkgRecipe/AutoPkgRelease.brew.recipe.yaml"
      - "AutoPkgRecipe/AutoPkgReleasePkg.download.recipe.yaml"
  pull_request:
    paths:
      - ".github/workflows/AutoPkgReleaseBrew.yaml"
      - "AutoPkgRecipe/autopkg.rb.mustache"
      - "AutoPkgRecipe/AutoPkgRelease.brew.recipe.yaml"
      - "AutoPkgRecipe/AutoPkgReleasePkg.download.recipe.yaml"

jobs:
  AutoPkgBrew:
    runs-on: macos-latest
    steps:
      # only needed on self hosted windows runners:
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - name: Set github token autopkg
        # required for githubreleaseinfoprovider in github actions
        # without this, API limits will be hit
        run: |
          cd ~
          echo ${{ secrets.GITHUB_TOKEN }} > ".autopkg_gh_token"
      - name: Set github token homebrew
        # echo 'export HOMEBREW_GITHUB_API_TOKEN=your_token_here' >> /Users/runner/.bash_profile
        run: |
          cd ~
          echo 'export HOMEBREW_GITHUB_API_TOKEN=${{ secrets.GITHUB_TOKEN }}' >> .bash_profile

      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      # - name: Install requirements
      #   run: pip install --requirement requirements.txt
      # - name: git clone autopkg, checkout dev
      #   run: |
      #     git clone https://github.com/autopkg/autopkg.git
      #     cd autopkg
      #     git checkout dev
      - name: checkout autopkg dev
        uses: actions/checkout@v3
        with:
          repository: autopkg/autopkg
          path: autopkg
          ref: dev
      - name: Install AutoPkg Reqirements
        run: pip install --requirement autopkg/requirements.txt
      - name: pip install recipe python dependancies
        run: pip install chevron
      - name: create empty config windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "%USERPROFILE%/AppData/Local/Autopkg" mkdir "%USERPROFILE%/AppData/Local/Autopkg"
          if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"
      - name: create default autopkg config file Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json
      - name: run test recipe autopkg
        run: python autopkg/Code/autopkg run -v Test-Recipes/AutopkgCore.test.recipe.yaml

      - name: run brew recipe
        # See the following files used:
        # - https://github.com/jgstew/jgstew-recipes/blob/main/AutoPkgRecipe/autopkg.rb.mustache
        # - https://github.com/jgstew/jgstew-recipes/blob/main/AutoPkgRecipe/AutoPkgReleasePkg.download.recipe.yaml
        # - https://github.com/jgstew/jgstew-recipes/blob/main/AutoPkgRecipe/AutoPkgRelease.brew.recipe.yaml
        run: python autopkg/Code/autopkg run -vv AutoPkgRecipe/AutoPkgRelease.brew.recipe.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: run brew install
        run: brew install --cask --verbose /Users/runner/Library/AutoPkg/Cache/com.github.jgstew.brew.AutoPkgRelease/autopkg.rb
      - name: test brew installed autopkg
        run: autopkg run -v Test-Recipes/AutopkgCore.test.recipe.yaml

      - name: run brew uninstall
        run: brew uninstall autopkg
      - name: run brew audit
        run: brew audit --cask --new-cask --verbose --strict --git --online /Users/runner/Library/AutoPkg/Cache/com.github.jgstew.brew.AutoPkgRelease/autopkg.rb
