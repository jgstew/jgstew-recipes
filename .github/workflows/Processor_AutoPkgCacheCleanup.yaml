---
name: Test Processor AutoPkgCacheCleanup

on:
  push:
    paths:
      - "SharedProcessors/AutoPkgCacheCleanup.py"
      - "Test-Recipes/AutoPkgCacheCleanup.test.recipe.yaml"
      - ".github/workflows/Processor_AutoPkgCacheCleanup.yaml"
  pull_request:
    paths:
      - "SharedProcessors/AutoPkgCacheCleanup.py"
      - "Test-Recipes/AutoPkgCacheCleanup.test.recipe.yaml"
      - ".github/workflows/Processor_AutoPkgCacheCleanup.yaml"

jobs:
  ProcessorAutoPkgCacheCleanup:
    strategy:
      matrix:
        # https://ncorti.com/blog/howto-github-actions-build-matrix
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      # only needed on self hosted windows runners:
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - name: checkout this repo
        uses: actions/checkout@v3

      - name: checkout autopkg dev
        uses: actions/checkout@v3
        with:
          repository: autopkg/autopkg
          path: autopkg
          ref: dev

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3
          cache: "pip"
          cache-dependency-path: |
            autopkg/gh_actions_requirements.txt

      # the processors being tested don't need these:
      # - name: Install requirements
      #   run: pip install --requirement requirements.txt

      - name: Install AutoPkg Reqirements
        run: pip install --requirement autopkg/gh_actions_requirements.txt
      - name: create empty config windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "%USERPROFILE%/AppData/Local/Autopkg" mkdir "%USERPROFILE%/AppData/Local/Autopkg"
          if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"
      - name: create default autopkg config file Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json
      - name: Set up old files
        shell: bash
        run: |
          mkdir -p ~/Library/AutoPkg/Cache/com.github.test/downloads
          touch ~/Library/AutoPkg/Cache/com.github.test/downloads/testfile.txt
          mkdir -p ~/Library/AutoPkg/Cache/com.github.jgstew.test.AutoPkgCacheCleanup/downloads
          echo "test" > ~/Library/AutoPkg/Cache/com.github.jgstew.test.AutoPkgCacheCleanup/downloads/tmpabcde
      - name: run recipe autopkg
        run: python autopkg/Code/autopkg run -vv Test-Recipes/AutoPkgCacheCleanup.test.recipe.yaml
# Related:
# - https://github.com/jgstew/bigfix-content/blob/master/.github/workflows/AutoPkgCoreProcessors.yaml
