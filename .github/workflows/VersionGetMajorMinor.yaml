---
name: Test VersionGetMajorMinor

on:
  push:
    paths:
      - "SharedProcessors/VersionGetMajorMinor.py"
      - "Test-Recipes/VersionGetMajorMinor.test.recipe.yaml"
      - ".github/workflows/VersionGetMajorMinor.yaml"
  pull_request:
    paths:
      - "SharedProcessors/VersionGetMajorMinor.py"
      - "Test-Recipes/VersionGetMajorMinor.test.recipe.yaml"
      - ".github/workflows/VersionGetMajorMinor.yaml"

jobs:
  VersionGetMajorMinor:
    runs-on: ubuntu-latest
    steps:
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install requirements
        run: pip install --requirement requirements.txt
      - name: git clone autopkg
        run: git clone https://github.com/jgstew/autopkg.git
      - name: Install AutoPkg Reqirements
        run: pip install --requirement autopkg/requirements.txt
      - name: create empty config windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"
      - name: create default autopkg config file Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json
      - name: test autopkg info
        run: python autopkg/Code/autopkg info
