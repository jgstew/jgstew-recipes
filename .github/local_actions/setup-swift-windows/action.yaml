name: Setup Swift in Windows
description: Setup Swift environment in Windows Runner.

inputs:
  version:
    description: Version of Swift (e.g. `5.4.2`)
    required: true

branding:
  icon: chevrons-down
  color: orange

runs:
  using: composite
  steps:
    - name: Download Cached Installer
      uses: actions/cache@v3
      id: cached-swift-installer
      with:
        path: "${{ runner.temp }}/swift-installer.exe"
        key: "swift-installer-${{ runner.os }}-https://swift.org/builds/swift-${{ inputs.version }}-release/windows10/swift-${{ inputs.version }}-RELEASE/swift-${{ inputs.version }}-RELEASE-windows10.exe"
    - name: Download Swift
      if: steps.cached-swift-installer.outputs.cache-hit != 'true'
      shell: pwsh
      run: |
        If (test-path "${{ runner.temp }}\swift-installer.exe") {
        } else {
          curl -o "${{ runner.temp }}\swift-installer.exe" https://swift.org/builds/swift-${{ inputs.version }}-release/windows10/swift-${{ inputs.version }}-RELEASE/swift-${{ inputs.version }}-RELEASE-windows10.exe
        }
    - name: Install Swift
      shell: pwsh
      run: Start-Process -Wait -FilePath "${{ runner.temp }}\swift-installer.exe" -ArgumentList ("/quiet", "/norestart")
    - name: Set Environment Variables
      shell: pwsh
      run: |
        echo "SDKROOT=C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "DEVELOPER_DIR=C:\Library\Developer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        echo "C:\Library\Swift-development\bin;C:\Library\icu-67\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        echo "C:\Library\Developer\Toolchains\unknown-Asserts-development.xctoolchain\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - name: Install Supporting Files
      shell: pwsh
      run: |
        Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
        Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
        Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
        Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"
