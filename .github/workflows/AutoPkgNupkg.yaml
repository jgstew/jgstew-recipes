---
name: Test AutoPkg Nupkg

on:
  push:
    paths:
      - ".github/workflows/AutoPkgNupkg.yaml"
      - "AutoPkgRecipe/AutoPkgRelease.download.recipe.yaml"
      - "AutoPkgRecipe/AutoPkgRelease.nupkg.recipe.yaml"
  pull_request:
    paths:
      - ".github/workflows/AutoPkgNupkg.yaml"
      - "AutoPkgRecipe/AutoPkgRelease.download.recipe.yaml"
      - "AutoPkgRecipe/AutoPkgRelease.nupkg.recipe.yaml"
  schedule:
    # run first day of every month:
    - cron: "* * 1 * *"

jobs:
  AutoPkgNupkg:
    runs-on: windows-latest
    steps:
      # only needed on self hosted windows runners:
      - name: set powershell execution policy CurrentUser
        if: runner.os == 'Windows'
        shell: cmd
        run: powershell -command "Set-ExecutionPolicy -Force -ExecutionPolicy RemoteSigned -Scope CurrentUser"

      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      # - name: Install requirements
      #   run: pip install --requirement requirements.txt
      - name: git clone autopkg, checkout dev
        run: |
          git clone https://github.com/autopkg/autopkg.git
          cd autopkg
          git checkout dev
      - name: Install AutoPkg Reqirements
        run: pip install --requirement autopkg/requirements.txt
      - name: create empty config windows
        # https://stackoverflow.com/questions/57946173/github-actions-run-step-on-specific-os
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          if not exist "%USERPROFILE%/AppData/Local/Autopkg" mkdir "%USERPROFILE%/AppData/Local/Autopkg"
          if not exist "%USERPROFILE%/AppData/Local/Autopkg/config.json" echo {} > "%USERPROFILE%/AppData/Local/Autopkg/config.json"
      - name: create default autopkg config file Linux
        if: runner.os == 'Linux'
        run: |
          cd ~ && mkdir -p .config/Autopkg
          cd ~ && echo {} > .config/Autopkg/config.json
      - name: run test recipe autopkg
        run: python autopkg/Code/autopkg run -vv Test-Recipes/AutopkgCore.test.recipe.yaml
      - name: run nupkg recipe
        run: python autopkg/Code/autopkg run -vv AutoPkgRecipe/AutoPkgRelease.nupkg.recipe.yaml
# Related:
# - https://github.com/jgstew/bigfix-content/blob/master/.github/workflows/autopkg.yaml
